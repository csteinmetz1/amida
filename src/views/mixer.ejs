<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>amida | <%= data.song.id %> </title>
	<link rel="stylesheet" href="/css/styles.css">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/tone/13.7.4/Tone.js"></script>
	<script src="https://tonejs.github.io/examples/js/tonejs-ui.js"></script>
</head>

<body>
	<div style="margin: 100px 0 15px 0;">
		<h1>amida</h1>
		<p class="counter">
			mixed: <strong> <%= data.nMixes %> </strong> |
			skipped: <strong> <%= data.nSkips %> </strong> |
			remaining: <strong><%= 100 - (data.nSkips + data.nMixes) %> </strong>
		</p>
	</div>
    <section>
		<div class="mixer">
			<div>
				<tone-content>
					<p style="margin: 0 0 -22px 0;" id="loading">Loading...</p>
					<div id="tracks" style="opacity: 0;">
						<tone-channel label="bass" id="bass"></tone-channel>
						<tone-channel label="drums" id="drums"></tone-channel>
						<tone-channel label="other" id="other"></tone-channel>
						<tone-channel label="vocals" id="vocals"></tone-channel>
						<tone-play-toggle></tone-play-toggle>
					</div>
				</tone-content>
				<div style="margin: -40px 0 0 0;">
					<button class="save-button" type="btn" onclick="save('<%= data.userId %>', '<%= data.song.id %>');"><p>Submit</p></button>
					<button class="save-button" type="btn" onclick="skip('<%= data.song.id %>')"><p>Skip</p></button>
					<button class="save-button" type="btn" onclick="exit()"><p>Exit</p></button>
					<p id="result"></p>
				</div>
				<div class="song-detail">
					<h2 class="song-id"><%= data.song.id %></h2>
					<h3 class="song-title"><%= data.song.title %> </h3>
					<h3 class="artist"><%= data.song.artist %> </h3>
				</div>

			</div>

		</div>

	</section>
	<div class="footer">
		<p>
			Â© 2019
			<a href="https://christiansteinmetz.com">Christian Steinmetz</a> | 
			<a href="https://github.com/csteinmetz1/amida"> Source Code </a> | 
			<a href="/privacy_policy.html"> Privacy Policy </a> |
			<a href="/details.html"> Details </a>
		</p>
	</div>

	<script type="text/javascript">

	var start = window.performance.now(); // start timing the mix in seconds

		function makeChannel(name, url){
			var channel = new Tone.Channel().toMaster();
			var player = new Tone.Player({
				url : url,
				loop : true
			}).sync().start(0);
			player.chain(channel);
			//bind the UI
			document.querySelector(`#${name}`).bind(channel);
			return player;
		}	

		function skip(songId) {
			location.href = `/next/${songId}/skip`;
		}

		function save(userId, songId) {
			var mixTime = (window.performance.now() - start)/1000; // stop timing the mix in seconds
			var result = document.getElementById("result");
			var channels = document.getElementsByTagName("tone-channel");
			var gains = [];

			for (var idx = 0; idx<channels.length; idx++) {
				gains.push(parseInt(channels[idx].shadowRoot.querySelector("tone-volume-slider")
									.shadowRoot.querySelector("#number").childNodes[3].nodeValue));			
			}
			console.log(gains);
			result.innerHTML = "Saved mix!";
			location.href = `/save/${userId}/${songId}/${gains[0]}/${gains[1]}/${gains[2]}/${gains[3]}/${mixTime}`
			start = window.performance.now(); // start timing the mix again in seconds
		}

		function removePans() {
			var channels = document.getElementsByTagName("tone-channel");

			for (var idx = 0; idx<channels.length; idx++) {
				channels[idx].shadowRoot.childNodes[4].childNodes[5].remove();
			}
		}

		function checkLoadStatus(b, d, v, o) {
			var interval = setInterval(function() {
				// check if all audio files have loaded
				if (b.loaded && d.loaded && o.loaded && v.loaded) { 
					var loading = document.getElementById("loading");
					var tracks  = document.getElementById("tracks");
					loading.innerHTML = "";
					loading.style = "";
					tracks.classList.add("fade-in");
					tracks.style.opacity = 1.0;
					clearInterval(interval);
					return;
				}
			}, 250); 
		}
	
		b = makeChannel("bass",   "/<%- data.song.tracks.stereo['bass'] %>"   );
		d = makeChannel("drums",  "/<%- data.song.tracks.stereo['drums'] %>"  );
		o = makeChannel("other",  "/<%- data.song.tracks.stereo['other'] %>"  );
		v = makeChannel("vocals", "/<%- data.song.tracks.stereo['vocals'] %>" );
		document.querySelector("tone-play-toggle").bind(Tone.Transport);
		removePans();
		checkLoadStatus(b, d, o, v);
	</script>

</body>
</html>